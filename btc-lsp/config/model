-- Syntax for this file here:
-- https://github.com/yesodweb/persistent/blob/master/docs/Persistent-entity-syntax.md

User
  nodePubKey NodePubKey
  latestNonce Nonce
  insertedAt UTCTime
  updatedAt UTCTime
  UniqueUser nodePubKey
  deriving Eq Ord Show Generic

SwapIntoLn
  uuid (Uuid 'SwapIntoLnTable)
  userId UserId
  fundInvoice (LnInvoice 'Fund)
  fundInvHash RHash
  fundAddress (OnChainAddress 'Fund)
  fundProof RPreimage Maybe
  refundAddress (OnChainAddress 'Refund)
  chanCapUser (Money 'Usr 'Ln 'Fund)
  chanCapLsp (Money 'Lsp 'Ln 'Fund)
  feeLsp (Money 'Lsp 'OnChain 'Gain)
  feeMiner (Money 'Lsp 'OnChain 'Loss)
  status SwapStatus
  privacy Privacy
  expiresAt UTCTime
  insertedAt UTCTime
  updatedAt UTCTime
  UniqueSwapIntoLnFundInvUuid uuid
  UniqueSwapIntoLnFundInvHash fundInvHash
  UniqueSwapIntoLnFundAddress fundAddress
  deriving Eq Show Generic

SwapUtxo
  swapIntoLnId SwapIntoLnId
  blockId BlockId
  txid (TxId 'Funding)
  vout (Vout 'Funding)
  amount (Money 'Usr 'OnChain 'Fund)
  status SwapUtxoStatus
  refundBlockId BlockId Maybe
  refundTxId (TxId 'Funding) Maybe
  lockId UtxoLockId Maybe
  insertedAt UTCTime
  updatedAt UTCTime
  UniqueSwapUtxo txid vout
  deriving Eq Ord Show Generic

Block
  height BlkHeight
  hash BlkHash
  -- Using BlockHash instead of BlockId as prev because we
  -- don't want to scan all blockchain. First block
  -- does not have previous block, but it's ok because
  -- we don't start from first block anyway. All monitored
  -- addresses are generated by lsp itself, so first block
  -- addresses will never happen.
  prev BlkPrevHash Maybe
  status BlkStatus
  insertedAt UTCTime
  updatedAt UTCTime
  UniqueBlock hash
  deriving Eq Ord Show Generic

LnChan
  swapIntoLnId SwapIntoLnId Maybe
  fundingTxId (TxId 'Funding)
  fundingVout (Vout 'Funding)
  closingTxId (TxId 'Closing) Maybe
  extId ChanId Maybe
  -- We need to track is channel used or not.
  -- If channel is not used for a long time, then
  -- it should be closed because it's not efficient
  -- allocation of liquidity. We can track channel usage
  -- with combination of numUpdates and updatedAt.
  numUpdates Word64
  totalSatoshisSent MSat
  totalSatoshisReceived MSat
  status LnChanStatus
  insertedAt UTCTime
  updatedAt UTCTime
  UniqueLnChan fundingTxId fundingVout
  deriving Eq Ord Show Generic
