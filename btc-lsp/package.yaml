name:                btc-lsp
version:             0.1.0.0
github:              "githubuser/btc-lsp"
license:             BSD3
author:              "Author name here"
maintainer:          "example@example.com"
copyright:           "2020 Author name here"

extra-source-files:
- README.md
- ChangeLog.md

# Metadata used when publishing your package
# synopsis:            Short description of your package
# category:            Web

# To avoid duplicated efforts in documentation and dealing with the
# complications of embedding Haddock markup inside cabal files, it is
# common to point users to the README.md file.
description:         Please see the README on GitHub at <https://github.com/githubuser/btc-lsp#readme>

# Define flags used by "yesod devel" to make compilation faster
flags:
  library-only:
    description: Build for use with "yesod devel"
    manual: false
    default: false
  dev:
    description: Turn on development settings, like auto-reload templates.
    manual: false
    default: false
  ghcid:
    manual: true
    default: false

dependencies:
# foundation
- base >= 4.7 && < 5
- unliftio
- universum
- containers
- transformers
- extra
- errors
- witch
# time
- time
- chronos
- unbounded-delays
# storage
- persistent >= 2.13.2.1
- persistent-postgresql >= 2.13.2.1
- persistent-template >= 2.12
- persistent-migration
- esqueleto >= 3.5.3
# logging
- katip < 0.8.5
- monad-logger
- pretty
- pretty-simple
- GenericPretty
- generic-pretty-instances
# lens
- lens
- microlens
# bytes
- case-insensitive
- bytestring
- text
- proto-lens
- proto-lens-runtime
- binary
- casing
- memory
- aeson
- base16-bytestring
- hex-text
- base64-bytestring >= 1.2.1
# threads
- async
- stm
- resource-pool
# th
- template-haskell
# crypto
- uuid
- network-bitcoin
- SHA
- lnd-client
- cryptonite
- secp256k1-haskell
# web
- wai
- warp
- warp-tls
- warp-grpc
- http2
- http2-grpc-types
- http2-grpc-proto-lens
- http2-client
- http2-client-grpc
- network
- http-client
- http-types
# other
- envparse
- scientific
- vector
# yesod
- yesod >=1.6 && <1.7
- yesod-core >=1.6 && <1.7
- yesod-auth >=1.6 && <1.7
- yesod-static >=1.6 && <1.7
- yesod-form >=1.6 && <1.7
- classy-prelude >=1.5 && <1.6
- classy-prelude-conduit >=1.5 && <1.6
- classy-prelude-yesod >=1.5 && <1.6
- bytestring >=0.10 && <0.11
- text >=0.11 && <2.0
- template-haskell
- shakespeare >=2.0 && <2.1
- hjsmin >=0.1 && <0.3
- monad-control >=0.3 && <1.1
- wai-extra >=3.0 && <3.1
- yaml >=0.11 && <0.12
- http-client-tls >=0.3 && <0.4
- http-conduit >=2.3 && <2.4
- directory >=1.1 && <1.4
- warp >=3.0 && <3.4
- data-default
- aeson >=1.4 && <1.5
- conduit >=1.0 && <2.0
- monad-logger >=0.3 && <0.4
- fast-logger >=2.2 && <3.1
- wai-logger >=2.2 && <2.4
- file-embed
- safe
- unordered-containers
- containers
- vector
- time
- case-insensitive
- wai
- foreign-store
# yesod-extra
- blaze-html
- colonnade
- yesod-colonnade

default-extensions:
- NoImplicitPrelude
- MultiParamTypeClasses
- LambdaCase
- OverloadedStrings
- ScopedTypeVariables
- DeriveGeneric
- GeneralizedNewtypeDeriving
- TupleSections
- DataKinds
- DerivingStrategies
- KindSignatures
- FlexibleContexts
- FlexibleInstances
- StrictData
- TypeFamilies
- TypeOperators
- StandaloneDeriving
- DerivingVia

ghc-options:
# For details on warnings: https://downloads.haskell.org/~ghc/master/users-guide/using-warnings.html
# Enable all warnings with -Weverything, then disable the ones we don’t care about
- -Weverything
- -Werror
- -Wno-missing-exported-signatures # missing-exported-signatures turns off the more strict -Wmissing-signatures. See https://ghc.haskell.org/trac/ghc/ticket/14794#ticket
- -Wno-missing-import-lists # Requires explicit imports of _every_ function (e.g. ‘$’); too strict
- -Wno-missed-specialisations # When GHC can’t specialize a polymorphic function. No big deal and requires fixing underlying libraries to solve.
- -Wno-all-missed-specialisations # See missed-specialisations
- -Wno-unsafe # Don’t use Safe Haskell warnings
- -Wno-safe # Don’t use Safe Haskell warnings
- -Wno-missing-local-signatures # Warning for polymorphic local bindings; nothing wrong with those.
- -Wno-missing-export-lists # Because of proto-lens
when:
  - condition: impl(ghc >= 8.10.7)
    ghc-options:
    #
    # TODO : remove -Wno-unused-packages flag somehow!!!
    #
    - -Wno-unused-packages
    - -Wno-missing-safe-haskell-mode
    - -Wno-prepositive-qualified-module
    - -fenable-th-splice-warnings
    - -fprint-potential-instances

# The library contains all of our application code. The executable
# defined below is just a thin wrapper.
library:
  source-dirs:
  - src
  when:
  - condition: (flag(dev)) || (flag(library-only))
    then:
      ghc-options:
      - -Wall
      - -fwarn-tabs
      - -O0
      cpp-options: -DDEVELOPMENT
    else:
      ghc-options:
      - -Wall
      - -fwarn-tabs
      - -O2

executables:
  btc-lsp-exe:
    main: Main.hs
    source-dirs:
    - app
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    when:
    - condition: flag(library-only)
      buildable: false
    - condition: flag(ghcid)
      then:
        source-dirs:
        - src
      else:
        dependencies:
        - btc-lsp
  btc-lsp-integration:
    main: Integration.hs
    source-dirs:
    - integration
    - test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    - -main-is
    - Integration
    dependencies:
    - QuickCheck
    - quickcheck-instances
    - generic-arbitrary
    - proto-lens-arbitrary
    - hspec
    - hspec-expectations
    - hspec-wai
    - hspec-discover
    when:
    - condition: flag(ghcid)
      then:
        source-dirs:
        - src
      else:
        dependencies:
        - btc-lsp
  btc-lsp-prof:
    main: Main.hs
    source-dirs:
    - app
    ghc-options:
    - -O2
    - -threaded
    - -prof
    - -fprof-auto
    - "\"-with-rtsopts=-N -s -p -h -xt\""
    - -fexternal-interpreter
    when:
    - condition: flag(ghcid)
      then:
        source-dirs:
        - src
      else:
        dependencies:
        - btc-lsp

tests:
  btc-lsp-test:
    main: Main.hs
    source-dirs:
    - test
    ghc-options:
    - -threaded
    - -rtsopts
    - -with-rtsopts=-N
    dependencies:
    - QuickCheck
    - quickcheck-instances
    - generic-arbitrary
    - proto-lens-arbitrary
    - hspec
    - hspec-expectations
    - hspec-wai
    when:
    - condition: flag(ghcid)
      then:
        source-dirs:
        - src
      else:
        dependencies:
        - btc-lsp

