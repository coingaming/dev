{- This file was auto-generated by the signable-haskell-protoc program. -}
{-# OPTIONS_GHC -fno-warn-orphans #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# LANGUAGE OverloadedStrings #-}

module Proto.SignableOrphan (
    ) where
import qualified Universum
import qualified Data.Signable
import qualified GHC.List
import qualified Proto.BtcLsp.Data.Newtype
import qualified Proto.BtcLsp.Data.Newtype_Fields
import qualified Proto.BtcLsp.Data.Type
import qualified Proto.BtcLsp.Data.Type_Fields
import qualified Proto.BtcLsp.Method.GetCfg
import qualified Proto.BtcLsp.Method.GetCfg_Fields
import qualified Proto.BtcLsp.Method.SwapIntoLn
import qualified Proto.BtcLsp.Method.SwapIntoLn_Fields
import qualified Proto.BtcLsp.Method.SwapFromLn
import qualified Proto.BtcLsp.Method.SwapFromLn_Fields
import qualified Proto.BtcLsp
import qualified Proto.BtcLsp_Fields
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.Nonce where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Data.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.FieldIndex where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Data.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.SocketAddress where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Data.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.Msat where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Data.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.FeeAmt where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Data.Newtype_Fields.maybe'val)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.FundAmt where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Data.Newtype_Fields.maybe'val)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.RefundAmt where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Data.Newtype_Fields.maybe'val)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.LocalBalance where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Data.Newtype_Fields.maybe'val)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.RemoteBalance where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Data.Newtype_Fields.maybe'val)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.LnPubKey where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Data.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.LnInvoice where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Data.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.LnHodlInvoice where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Data.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.FundLnInvoice where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Data.Newtype_Fields.maybe'val)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.FundLnHodlInvoice where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Data.Newtype_Fields.maybe'val)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.OnChainAddress where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Data.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.FundOnChainAddress where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Data.Newtype_Fields.maybe'val)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Newtype.RefundOnChainAddress where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Data.Newtype_Fields.maybe'val)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Type.InputFailureKind where
  toBinary
    = Universum.maybe
        (Universum.error "ENUM_OVERFLOW") Data.Signable.toBinary
        Universum..
          ((Data.Signable.safeFromIntegral ::
              Universum.Int -> Universum.Maybe Universum.Int32)
             Universum.. Universum.fromEnum)
instance Data.Signable.Signable Proto.BtcLsp.Data.Type.Ctx where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Data.Type_Fields.maybe'nonce)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Data.Type_Fields.maybe'lnPubKey)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Type.Rational where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Data.Type_Fields.negative),
              (Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum..
                       Universum.view Proto.BtcLsp.Data.Type_Fields.numerator),
              (Universum.<>) (Data.Signable.toBinary (3 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum..
                       Universum.view Proto.BtcLsp.Data.Type_Fields.denominator)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Type.Urational where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum..
                       Universum.view Proto.BtcLsp.Data.Type_Fields.numerator),
              (Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum..
                       Universum.view Proto.BtcLsp.Data.Type_Fields.denominator)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Type.FeeRate where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Data.Type_Fields.maybe'val)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Data.Type.InputFailure where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Data.Type_Fields.fieldLocation)
                (Universum.not Universum.. Universum.null)
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              (Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Data.Type_Fields.kind)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Method.GetCfg.Request where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Method.GetCfg_Fields.maybe'ctx)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Method.GetCfg.Response where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Method.GetCfg_Fields.maybe'ctx)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Method.GetCfg_Fields.maybe'success)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Method.GetCfg_Fields.maybe'failure)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (3 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Method.GetCfg.Response'Success where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Method.GetCfg_Fields.btcLspLnNodes)
                (Universum.not Universum.. Universum.null)
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.GetCfg_Fields.maybe'swapIntoLnMinAmt)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.GetCfg_Fields.maybe'swapIntoLnMaxAmt)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (3 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.GetCfg_Fields.maybe'swapFromLnMinAmt)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (4 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.GetCfg_Fields.maybe'swapFromLnMaxAmt)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (5 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.GetCfg_Fields.maybe'swapLnFeeRate)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (6 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.GetCfg_Fields.maybe'swapLnMinFee)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (7 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Method.GetCfg.Response'Failure where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Method.GetCfg_Fields.input)
                (Universum.not Universum.. Universum.null)
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Method.GetCfg_Fields.internal)
                (Universum.not Universum.. Universum.null)
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Method.GetCfg.Response'Failure'InternalFailure where
  toBinary
    = Universum.mconcat
        Universum.. ((Universum.<&>) [] Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Method.SwapIntoLn.Request where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Method.SwapIntoLn_Fields.maybe'ctx)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.SwapIntoLn_Fields.maybe'fundLnInvoice)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.SwapIntoLn_Fields.maybe'refundOnChainAddress)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (3 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Method.SwapIntoLn.Response where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Method.SwapIntoLn_Fields.maybe'ctx)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.SwapIntoLn_Fields.maybe'success)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.SwapIntoLn_Fields.maybe'failure)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (3 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Method.SwapIntoLn.Response'Success where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.SwapIntoLn_Fields.maybe'fundOnChainAddress)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Method.SwapIntoLn.Response'Failure where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Method.SwapIntoLn_Fields.input)
                (Universum.not Universum.. Universum.null)
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Method.SwapIntoLn_Fields.internal)
                (Universum.not Universum.. Universum.null)
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Method.SwapIntoLn.Response'Failure'InternalFailure where
  toBinary
    = Universum.mconcat
        Universum.. ((Universum.<&>) [] Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Method.SwapFromLn.Request where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Method.SwapFromLn_Fields.maybe'ctx)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.SwapFromLn_Fields.maybe'fundAmt)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.SwapFromLn_Fields.maybe'fundOnChainAddress)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (3 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Method.SwapFromLn.Response where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Method.SwapFromLn_Fields.maybe'ctx)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.SwapFromLn_Fields.maybe'success)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.SwapFromLn_Fields.maybe'failure)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (3 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Method.SwapFromLn.Response'Success where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Method.SwapFromLn_Fields.maybe'fundLnHodlInvoice)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Method.SwapFromLn.Response'Failure where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Method.SwapFromLn_Fields.input)
                (Universum.not Universum.. Universum.null)
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Method.SwapFromLn_Fields.internal)
                (Universum.not Universum.. Universum.null)
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Method.SwapFromLn.Response'Failure'InternalFailure where
  toBinary
    = Universum.mconcat
        Universum.. ((Universum.<&>) [] Universum.. (Universum.&))