{- This file was auto-generated by the signable-haskell-protoc program. -}
{-# OPTIONS_GHC -fno-warn-orphans #-}
{-# OPTIONS_GHC -fno-warn-unused-imports #-}
{-# LANGUAGE NoImplicitPrelude #-}
{-# LANGUAGE OverloadedStrings #-}

module Proto.SignableOrphan (
    ) where
import qualified Universum
import qualified Data.Signable
import qualified GHC.List
import qualified Proto.BtcLsp.Newtype
import qualified Proto.BtcLsp.Newtype_Fields
import qualified Proto.BtcLsp.Type
import qualified Proto.BtcLsp.Type_Fields
import qualified Proto.BtcLsp.General.GetCfg
import qualified Proto.BtcLsp.General.GetCfg_Fields
import qualified Proto.BtcLsp.Custody.OpenChanLn
import qualified Proto.BtcLsp.Custody.OpenChanLn_Fields
import qualified Proto.BtcLsp.Custody.OpenChanOnChain
import qualified Proto.BtcLsp.Custody.OpenChanOnChain_Fields
import qualified Proto.BtcLsp
import qualified Proto.BtcLsp_Fields
instance Data.Signable.Signable Proto.BtcLsp.Newtype.Nonce where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Newtype.FieldIndex where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Newtype.SocketAddress where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Newtype.Msat where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Newtype.LocalBalance where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Newtype_Fields.maybe'val)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Newtype.RemoteBalance where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Newtype_Fields.maybe'val)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Newtype.LnPubKey where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Newtype.LnInvoice where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Newtype.LnHodlInvoice where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Newtype.OnChainAddress where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Newtype_Fields.val)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Type.InputFailureKind where
  toBinary
    = Universum.maybe
        (Universum.error "ENUM_OVERFLOW") Data.Signable.toBinary
        Universum..
          ((Data.Signable.safeFromIntegral ::
              Universum.Int -> Universum.Maybe Universum.Int32)
             Universum.. Universum.fromEnum)
instance Data.Signable.Signable Proto.BtcLsp.Type.Ctx where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Type_Fields.maybe'nonce)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Type_Fields.maybe'lnPubKey)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Type.Cfg where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Type_Fields.maybe'openChanMinLocalBalance)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Type_Fields.maybe'openChanMaxLocalBalance)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Type_Fields.maybe'openChanMinRemoteBalance)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (3 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Type_Fields.maybe'openChanMaxRemoteBalance)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (4 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Type_Fields.maybe'openChanRemoteBalanceFeeRate)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (5 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Type_Fields.maybe'openChanMinFeeAmt)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (6 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Type.Rational where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Type_Fields.negative),
              (Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Type_Fields.numerator),
              (Universum.<>) (Data.Signable.toBinary (3 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Type_Fields.denominator)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Type.Urational where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [(Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Type_Fields.numerator),
              (Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Type_Fields.denominator)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Type.FeeRate where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Type_Fields.maybe'val)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Type.InputFailure where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Type_Fields.fieldLocation)
                (Universum.not Universum.. Universum.null)
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              (Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                Universum..
                  (Data.Signable.toBinary
                     Universum.. Universum.view Proto.BtcLsp.Type_Fields.kind)]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.General.GetCfg.Request where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.General.GetCfg_Fields.maybe'ctx)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.General.GetCfg.Response where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.General.GetCfg_Fields.maybe'ctx)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.General.GetCfg_Fields.maybe'success)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.General.GetCfg_Fields.maybe'failure)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (3 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.General.GetCfg.Response'Success where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.General.GetCfg_Fields.maybe'cfg)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.General.GetCfg.Response'Failure where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.General.GetCfg_Fields.input)
                (Universum.not Universum.. Universum.null)
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.General.GetCfg_Fields.internal)
                (Universum.not Universum.. Universum.null)
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.General.GetCfg.Response'Failure'InternalFailure where
  toBinary
    = Universum.mconcat
        Universum.. ((Universum.<&>) [] Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Custody.OpenChanLn.Request where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Custody.OpenChanLn_Fields.maybe'ctx)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanLn_Fields.maybe'localBalance)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanLn_Fields.maybe'remoteBalance)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (3 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Custody.OpenChanLn.Response where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Custody.OpenChanLn_Fields.maybe'ctx)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanLn_Fields.maybe'success)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanLn_Fields.maybe'failure)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (3 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Custody.OpenChanLn.Response'Success where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanLn_Fields.maybe'connectToNode)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanLn_Fields.maybe'payFundingInvoice)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Custody.OpenChanLn.Response'Failure where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Custody.OpenChanLn_Fields.input)
                (Universum.not Universum.. Universum.null)
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Custody.OpenChanLn_Fields.internal)
                (Universum.not Universum.. Universum.null)
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Custody.OpenChanLn.Response'Failure'InternalFailure where
  toBinary
    = Universum.mconcat
        Universum.. ((Universum.<&>) [] Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Custody.OpenChanOnChain.Request where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanOnChain_Fields.maybe'ctx)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanOnChain_Fields.maybe'localBalance)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanOnChain_Fields.maybe'remoteBalance)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (3 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Custody.OpenChanOnChain.Response where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanOnChain_Fields.maybe'ctx)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanOnChain_Fields.maybe'success)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanOnChain_Fields.maybe'failure)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (3 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Custody.OpenChanOnChain.Response'Success where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanOnChain_Fields.maybe'connectToNode)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanOnChain_Fields.maybe'payFundingAddress)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanOnChain_Fields.maybe'payFundingAmt)
                Universum.isJust
                ((Universum.<>) (Data.Signable.toBinary (3 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Custody.OpenChanOnChain.Response'Failure where
  toBinary
    = Universum.mconcat
        Universum..
          ((Universum.<&>)
             [Data.Signable.applyWithDef
                (Universum.view Proto.BtcLsp.Custody.OpenChanOnChain_Fields.input)
                (Universum.not Universum.. Universum.null)
                ((Universum.<>) (Data.Signable.toBinary (1 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty,
              Data.Signable.applyWithDef
                (Universum.view
                   Proto.BtcLsp.Custody.OpenChanOnChain_Fields.internal)
                (Universum.not Universum.. Universum.null)
                ((Universum.<>) (Data.Signable.toBinary (2 :: Universum.Int32))
                   Universum.. Data.Signable.toBinary)
                Universum.mempty]
             Universum.. (Universum.&))
instance Data.Signable.Signable Proto.BtcLsp.Custody.OpenChanOnChain.Response'Failure'InternalFailure where
  toBinary
    = Universum.mconcat
        Universum.. ((Universum.<&>) [] Universum.. (Universum.&))