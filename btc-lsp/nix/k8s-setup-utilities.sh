#!/bin/bash

set -e

THIS_DIR="$(dirname "$(realpath "$0")")"
BUILD_DIR="$THIS_DIR/../build"

# Service-specific files are here
BITCOIND_PATH="$BUILD_DIR/bitcoind"
LND_PATH="$BUILD_DIR/lnd"
RTL_PATH="$BUILD_DIR/rtl"
LSP_PATH="$BUILD_DIR/lsp"
POSTGRES_PATH="$BUILD_DIR/postgres"

# Save all LetsEncrypt stuff here
LETSENCRYPT_DIR="$BUILD_DIR/letsencrypt"

# Save domain name here
LND_DOMAIN_PATH="$LND_PATH/domain.txt"
RTL_DOMAIN_PATH="$RTL_PATH/domain.txt"

confirmAction () {
  local ASK="$1"
  local ACTION="$2"

  while true; do
    read -p "$ASK (y/N) ? " CONFIRM
    case "$CONFIRM" in
      [Yy]* ) eval "$ACTION"; break;;
      [Nn]* ) break;;
      * ) echo "Please answer yes or no.";;
    esac
  done
}

confirmContinue () {
  local ASK="$1"

  while true; do
    read -p "$ASK (y/N) ? " CONFIRM
    case "$CONFIRM" in
      [Yy]* ) break;;
      [Nn]* ) exit;;
      * ) echo "Please answer yes or no.";;
    esac
  done
}

cleanBuildDir () {
  echo "Deleting everything in $BUILD_DIR"
  rm -rfv "$BUILD_DIR" && mkdir -p "$BUILD_DIR"

  echo "==> Generating new credentials"
  sh "$THIS_DIR/hm-shell-docker.sh" \
    --mini \
    "--run './nix/ns-gen-creds.sh'"
}

isInstalled () {
  local COMMAND_NAME="$1"

  if ! command -v "$COMMAND_NAME" &> /dev/null; then
    echo "Please install \"$COMMAND_NAME\" before continuing"
    exit 1;
  fi
}

checkFileExistsNotEmpty () {
  local FILEPATH="$1"

  if [ -f "$FILEPATH" ]; then
    if [ ! -s "$FILEPATH" ]; then
      echo "$FILEPATH is empty"
      exit 1;
    fi
  else
    echo "$FILEPATH does not exist"
    exit 1;
  fi
}

getLetsEncryptCert () {
  echo "Requesting cert for $DOMAIN_NAME..."
  certbot certonly \
    -d "*.$DOMAIN_NAME" \
    --agree-tos \
    --manual \
    --preferred-challenges dns \
    --register-unsafely-without-email \
    --config-dir "$LETSENCRYPT_DIR/etc" \
    --work-dir "$LETSENCRYPT_DIR/lib" \
    --logs-dir "$LETSENCRYPT_DIR/log"
}

copyLetsEncryptCert () {
  local COPY_PATH="$1"
  local DOMAIN_DIR="$LETSENCRYPT_DIR/etc/live/$DOMAIN_NAME"

  echo "Copying files generated by LetsEncrypt to $COPY_PATH"
  cp "$DOMAIN_DIR/cert.pem" "$COPY_PATH/tls.cert"
  cp "$DOMAIN_DIR/privkey.pem" "$COPY_PATH/tls.key"
}

setupLetsEncryptCert () {
  isInstalled certbot && \
  mkdir -p "$LETSENCRYPT_DIR" && \
  getLetsEncryptCert && \
  copyLetsEncryptCert "$RTL_PATH" && \
  copyLetsEncryptCert "$LSP_PATH"
}

askForDomainName () {
  local PREFIX="$1"

  if [ ! -f "$LND_DOMAIN_PATH" ] || [ ! -f "$RTL_DOMAIN_PATH" ]; then
    echo "==> Domain name must be set before continuing"
    read -p "Input your domain name: " "DOMAIN_NAME"

    local LND_DOMAIN="${PREFIX}lnd.$DOMAIN_NAME"
    local RTL_DOMAIN="${PREFIX}rtl.$DOMAIN_NAME"

    echo "Saving $LND_DOMAIN to $LND_DOMAIN_PATH"
    echo -n "$LND_DOMAIN" > "$LND_DOMAIN_PATH"

    echo "Saving $RTL_DOMAIN to $RTL_DOMAIN_PATH"
    echo -n "$RTL_DOMAIN" > "$RTL_DOMAIN_PATH"
  fi
}

checkRequiredFiles () {
  echo "==> Checking that all required files exist and are not empty"
  checkFileExistsNotEmpty "$BITCOIND_PATH/rpcuser.txt" 
  checkFileExistsNotEmpty "$BITCOIND_PATH/rpcpass.txt"

  checkFileExistsNotEmpty "$LND_PATH/walletpassword.txt" 

  checkFileExistsNotEmpty "$RTL_PATH/tls.cert" 
  checkFileExistsNotEmpty "$RTL_PATH/tls.key"
  checkFileExistsNotEmpty "$RTL_PATH/multipass.txt"

  checkFileExistsNotEmpty "$LSP_PATH/tls.cert" 
  checkFileExistsNotEmpty "$LSP_PATH/tls.key"
  echo "All files are OK."
}
