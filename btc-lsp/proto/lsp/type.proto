syntax="proto3";
package Lsp.Type;

import "lsp/newtype.proto";

message Ctx {
  .Lsp.Newtype.Nonce nonce = 1;
  .Lsp.Newtype.NodePubKey pub_key = 2;
}

message Failure {
  repeated InputFailure input = 1;
  repeated .Lsp.Newtype.InternalFailure internal = 2;
}

message InputFailure {
  repeated .Lsp.Newtype.FieldIndex field_location = 1;
  FailureKind kind = 2;
}

enum FailureKind {
  // All proto3 messages are optional, but sometimes
  // message presence is required by source code.
  REQUIRED = 0;
  // Sometimes data is required to be in some
  // specific format (for example DER binary encoding)
  // which is not the part of proto3 type system.
  // This error shows the failure of custom parser.
  PARSING_FAILED = 1;
  // Even if custom parser succeeded, sometimes data
  // needs to be verified somehow, for example
  // signature needs to be cryptographically verified.
  VERIFICATION_FAILED = 2;
  // Even verified data might be not supported by source code (yet).
  NOT_SUPPORTED = 3;
  // Sometimes protobuf term is not data itself, but reference
  // to some other data, located somewhere else, for example
  // in database, and this resource might be not found.
  NOT_FOUND = 4;
  // For errors where invoker doesn't have enough funds to perform transaction
  INSUFFICIENT_FUNDS = 5;
  // If some field provided in request is not unique (but it must be)
  NOT_UNIQUE = 6;
}
